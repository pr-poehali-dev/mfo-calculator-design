import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import Icon from '@/components/ui/icon';

import Header from '@/components/Header';
import LoanCalculator from '@/components/LoanCalculator';
import ApplicationForm from '@/components/ApplicationForm';
import ChatWidget from '@/components/ChatWidget';
import ProfileDialog from '@/components/ProfileDialog';
import AboutDialog from '@/components/AboutDialog';

interface Message {
  id: number;
  text: string;
  isBot: boolean;
  timestamp: Date;
}

interface FormData {
  fullName: string;
  phone: string;
  email: string;
  passport: string;
  income: string;
  workPlace: string;
  purpose: string;
  agreement: boolean;
}

interface UserProfile {
  phone: string;
  name: string;
  applications: Array<{
    id: number;
    amount: number;
    status: string;
    date: string;
  }>;
}

const Index = () => {
  const [loanAmount, setLoanAmount] = useState(25000);
  const [loanDays, setLoanDays] = useState(15);
  const [isFormOpen, setIsFormOpen] = useState(false);
  const [applicationStep, setApplicationStep] = useState(1);
  const [isChatOpen, setIsChatOpen] = useState(false);
  const [chatMessages, setChatMessages] = useState<Message[]>([
    { id: 1, text: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∑–∞–π–º–∞. –ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã?", isBot: true, timestamp: new Date() }
  ]);
  const [isTyping, setIsTyping] = useState(false);
  const [isProfileOpen, setIsProfileOpen] = useState(false);
  const [isAboutOpen, setIsAboutOpen] = useState(false);
  const [userProfile, setUserProfile] = useState<UserProfile | null>(null);
  const [formData, setFormData] = useState<FormData>({
    fullName: '',
    phone: '',
    email: '',
    passport: '',
    income: '',
    workPlace: '',
    purpose: '',
    agreement: false
  });

  const handleLoanAmountChange = (value: number[]) => {
    setLoanAmount(value[0]);
  };

  const handleLoanDaysChange = (value: number[]) => {
    setLoanDays(value[0]);
  };

  const handleFormSubmit = async () => {
    try {
      const emailData = {
        to: 'finanpro862@gmail.com',
        subject: `–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∑–∞–π–º - ${formData.fullName}`,
        body: `
–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∑–∞–π–º:

–§–ò–û: ${formData.fullName}
–¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone}
Email: ${formData.email}
–ü–∞—Å–ø–æ—Ä—Ç: ${formData.passport}
–î–æ—Ö–æ–¥: ${formData.income}
–ú–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã: ${formData.workPlace}
–¶–µ–ª—å –∑–∞–π–º–∞: ${formData.purpose}

–°—É–º–º–∞ –∑–∞–π–º–∞: ${loanAmount.toLocaleString()} ‚ÇΩ
–°—Ä–æ–∫: ${loanDays} –¥–Ω–µ–π
–ö –≤–æ–∑–≤—Ä–∞—Ç—É: ${Math.round(loanAmount * (1 + (0.08 / 100) * loanDays)).toLocaleString()} ‚ÇΩ

–î–∞—Ç–∞ –ø–æ–¥–∞—á–∏: ${new Date().toLocaleString('ru-RU')}
        `.trim()
      };

      console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –ø–æ—á—Ç—É:', emailData);
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);
    }

    setApplicationStep(2);
  };

  const sendMessage = async (message: string) => {
    const userMessage: Message = {
      id: Date.now(),
      text: message,
      isBot: false,
      timestamp: new Date()
    };
    
    setChatMessages(prev => [...prev, userMessage]);
    setIsTyping(true);
    
    setTimeout(() => {
      const botResponses = [
        "–î–ª—è –∑–∞–π–º–∞ –¥–æ 50000‚ÇΩ –Ω—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ –ø–∞—Å–ø–æ—Ä—Ç!",
        "–†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –∑–∞–π–º–∞ –∑–∞–Ω–∏–º–∞–µ—Ç –¥–æ 10 –º–∏–Ω—É—Ç",
        "–°—Ç–∞–≤–∫–∞ 0.08% –≤ –¥–µ–Ω—å - –æ–¥–Ω–∞ –∏–∑ —Å–∞–º—ã—Ö –Ω–∏–∑–∫–∏—Ö –Ω–∞ —Ä—ã–Ω–∫–µ",
        "–ü–µ—Ä–≤—ã–π –∑–∞–π–º –¥–ª—è –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ–¥ 0%!",
        "–î–µ–Ω—å–≥–∏ –ø–æ—Å—Ç—É–ø—è—Ç –Ω–∞ –∫–∞—Ä—Ç—É –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç"
      ];
      
      const randomResponse = botResponses[Math.floor(Math.random() * botResponses.length)];
      
      const botMessage: Message = {
        id: Date.now() + 1,
        text: randomResponse,
        isBot: true,
        timestamp: new Date()
      };
      
      setChatMessages(prev => [...prev, botMessage]);
      setIsTyping(false);
    }, 1500);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-green-50">
      <Header 
        onAboutClick={() => setIsAboutOpen(true)}
        onProfileClick={() => setIsProfileOpen(true)}
      />

      <main className="container mx-auto px-4 py-8">
        <section className="grid md:grid-cols-2 gap-12 items-center mb-16">
          <div className="space-y-6 animate-fade-in">
            <Badge className="bg-secondary text-black">–û–¥–æ–±—Ä–µ–Ω–∏–µ –∑–∞ 1 –º–∏–Ω—É—Ç—É</Badge>
            <h2 className="text-5xl font-bold text-gray-900 leading-tight">
              –ó–∞–π–º—ã –¥–æ <span className="text-primary">50 000 ‚ÇΩ</span> –Ω–∞ –≤—ã–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö
            </h2>
            <p className="text-xl text-gray-600">
              –ë—ã—Å—Ç—Ä–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–µ–Ω–µ–≥ –Ω–∞ –∫–∞—Ä—Ç—É. –ú–∏–Ω–∏–º—É–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –º–∞–∫—Å–∏–º—É–º —É–¥–æ–±—Å—Ç–≤–∞.
            </p>
            <div className="flex flex-wrap gap-4 mb-6">
              <div className="flex items-center space-x-2">
                <Icon name="Clock" size={20} className="text-secondary" />
                <span>–î–æ 30 –¥–Ω–µ–π</span>
              </div>
              <div className="flex items-center space-x-2">
                <Icon name="Percent" size={20} className="text-secondary" />
                <span>0.08% –≤ –¥–µ–Ω—å</span>
              </div>
              <div className="flex items-center space-x-2">
                <Icon name="Shield" size={20} className="text-secondary" />
                <span>100% –±–µ–∑–æ–ø–∞—Å–Ω–æ</span>
              </div>
            </div>
            
            <Button 
              size="lg"
              variant="outline"
              onClick={() => setIsProfileOpen(true)}
              className="bg-white border-2 border-primary text-primary hover:bg-primary hover:text-white font-semibold px-8 py-3"
            >
              <Icon name="LogIn" size={20} className="mr-2" />
              –í–æ–π—Ç–∏ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
            </Button>
          </div>
          
          <div className="flex justify-center animate-scale-in">
            <img 
              src="/img/416d01f0-3cd8-4d9a-ad27-609d474525cc.jpg" 
              alt="3D —á–µ–ª–æ–≤–µ–∫ —Å –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–º" 
              className="w-full max-w-md rounded-lg shadow-2xl"
            />
          </div>
        </section>

        <LoanCalculator
          loanAmount={loanAmount}
          loanDays={loanDays}
          onAmountChange={handleLoanAmountChange}
          onDaysChange={handleLoanDaysChange}
          onApplyClick={() => setIsFormOpen(true)}
        />

        <section className="grid md:grid-cols-3 gap-8 mb-16">
          <Card className="text-center p-6 hover:shadow-lg transition-all duration-300 hover:scale-105">
            <div className="w-16 h-16 bg-primary rounded-full flex items-center justify-center mx-auto mb-4">
              <Icon name="Zap" size={32} className="text-white" />
            </div>
            <h3 className="text-xl font-bold mb-2">–ë—ã—Å—Ç—Ä–æ–µ –æ–¥–æ–±—Ä–µ–Ω–∏–µ</h3>
            <p className="text-gray-600">–†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –∑–∞–Ω–∏–º–∞–µ—Ç –¥–æ 1 –º–∏–Ω—É—Ç—ã</p>
          </Card>
          
          <Card className="text-center p-6 hover:shadow-lg transition-all duration-300 hover:scale-105">
            <div className="w-16 h-16 bg-secondary rounded-full flex items-center justify-center mx-auto mb-4">
              <Icon name="Shield" size={32} className="text-black" />
            </div>
            <h3 className="text-xl font-bold mb-2">–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h3>
            <p className="text-gray-600">–ó–∞—â–∏—â–µ–Ω–Ω–∞—è –ø–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö –∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å</p>
          </Card>
          
          <Card className="text-center p-6 hover:shadow-lg transition-all duration-300 hover:scale-105">
            <div className="w-16 h-16 bg-primary rounded-full flex items-center justify-center mx-auto mb-4">
              <Icon name="CreditCard" size={32} className="text-white" />
            </div>
            <h3 className="text-xl font-bold mb-2">–ù–∞ –∫–∞—Ä—Ç—É</h3>
            <p className="text-gray-600">–î–µ–Ω—å–≥–∏ –ø–æ—Å—Ç—É–ø–∞—é—Ç –Ω–∞ –∫–∞—Ä—Ç—É –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç</p>
          </Card>
        </section>

        <section className="bg-gradient-to-r from-primary to-secondary rounded-2xl p-8 text-white text-center mb-16">
          <h3 className="text-3xl font-bold mb-4">üéâ –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!</h3>
          <p className="text-xl mb-6">–ü–µ—Ä–≤—ã–π –∑–∞–π–º –ø–æ–¥ 0% –¥–ª—è –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤</p>
          <Badge className="bg-white text-primary text-lg px-4 py-2">
            –ê–∫—Ü–∏—è –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ –∫–æ–Ω—Ü–∞ –º–µ—Å—è—Ü–∞
          </Badge>
        </section>
      </main>

      <footer className="bg-gray-900 text-white py-12">
        <div className="container mx-auto px-4">
          <div className="grid md:grid-cols-4 gap-8">
            <div>
              <h4 className="text-lg font-bold mb-4">–§–∏–Ω5</h4>
              <p className="text-gray-400">–ù–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä –≤ –º–∏—Ä–µ –º–∏–∫—Ä–æ—Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è</p>
            </div>
            <div>
              <h5 className="font-semibold mb-4">–£—Å–ª—É–≥–∏</h5>
              <ul className="space-y-2 text-gray-400">
                <li>–ú–∏–∫—Ä–æ–∑–∞–π–º—ã</li>
                <li>–≠–∫—Å–ø—Ä–µ—Å—Å-–∑–∞–π–º—ã</li>
                <li>–ó–∞–π–º—ã –Ω–∞ –∫–∞—Ä—Ç—É</li>
              </ul>
            </div>
            <div>
              <h5 className="font-semibold mb-4">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</h5>
              <ul className="space-y-2 text-gray-400">
                <li>8 (800) 123-45-67</li>
                <li>support@mfo-finans.ru</li>
                <li>–ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ</li>
              </ul>
            </div>
            <div>
              <h5 className="font-semibold mb-4">–î–æ–∫—É–º–µ–Ω—Ç—ã</h5>
              <ul className="space-y-2 text-gray-400">
                <li>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ</li>
                <li>–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</li>
                <li>–¢–∞—Ä–∏—Ñ—ã</li>
              </ul>
            </div>
          </div>
          <div className="border-t border-gray-700 mt-8 pt-8 text-center text-gray-400">
            <p>&copy; 2024 –§–∏–Ω5. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
          </div>
        </div>
      </footer>

      <ChatWidget
        isOpen={isChatOpen}
        onToggle={() => setIsChatOpen(!isChatOpen)}
        messages={chatMessages}
        onSendMessage={sendMessage}
        isTyping={isTyping}
      />

      <ApplicationForm
        isOpen={isFormOpen}
        onClose={() => setIsFormOpen(false)}
        loanAmount={loanAmount}
        loanDays={loanDays}
        formData={formData}
        onFormDataChange={setFormData}
        applicationStep={applicationStep}
        onSubmit={handleFormSubmit}
      />

      <ProfileDialog
        isOpen={isProfileOpen}
        onClose={() => setIsProfileOpen(false)}
        userProfile={userProfile}
        onLogin={setUserProfile}
        onLogout={() => setUserProfile(null)}
      />

      <AboutDialog
        isOpen={isAboutOpen}
        onClose={() => setIsAboutOpen(false)}
      />
    </div>
  );
};

export default Index;